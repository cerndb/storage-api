apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: storage-api
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: storage-api
    name: storage-api
  spec:
    ports:
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      deploymentconfig: storage-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: storage-api
    name: storage-api
  spec:
    replicas: 1
    selector:
      app: storage-api
      deploymentconfig: storage-api
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: storage-api
          deploymentconfig: storage-api
      spec:
        containers:
        - env:
          - name: SAPI_BACKENDS
            value: ${SAPI_BACKENDS}
          - name: SAPI_OAUTH_CLIENT_ID
            value: ${SAPI_OAUTH_CLIENT_ID}
          - name: SAPI_OAUTH_SECRET_KEY
            value: ${SAPI_OAUTH_SECRET_KEY}
          - name: SAPI_ROLE_USER_GROUPS
            value: ${SAPI_ROLE_USER_GROUPS}
          - name: SAPI_ROLE_ADMIN_GROUPS
            value: ${SAPI_ROLE_ADMIN_GROUPS}
          - name: SAPI_ROLE_UBER_ADMIN_GROUPS
            value: ${SAPI_ROLE_UBER_ADMIN_GROUPS}
          image: gitlab-registry.cern.ch/db/storage-api
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: storage-api
          ports:
          - containerPort: 8000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - storage-api
        from:
          kind: ImageStreamTag
          name: storage-api:latest
          namespace: test-it-db-storage-api
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: storage-api
    name: slash
  spec:
    port:
      targetPort: 8000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: storage-api
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-04-23T08:29:09Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: storage-api
    name: storage-api
  spec:
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: gitlab-registry.cern.ch/db/storage-api:latest
      from:
        kind: DockerImage
        name: gitlab-registry.cern.ch/db/storage-api:latest
      generation: 20
      importPolicy: {}
      name: storage-api
  status:
    dockerImageRepository: ""


parameters:
  - name: SAPI_BACKENDS
    required: true
    description: "A list of back-ends to enable, with their settings. See the README!"

  - name: SAPI_OAUTH_CLIENT_ID
    required: true
  - name: SAPI_OAUTH_SECRET_KEY
    required: true
  - name: SAPI_ROLE_ADMIN_GROUPS
    required: true
  - name: SAPI_ROLE_USER_GROUPS
    value: ""
    required: false
    description: "If empty, assign the User role to unauthenticated users"
  - name: SAPI_ROLE_UBER_ADMIN_GROUPS
    required: true
